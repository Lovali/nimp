*****
Usage
*****

Nimp is a set of commands to automate tasks related to continuous game project
integration (compiling, publishing binaries & packaged versions...)

::

    nimp [-h] [-s] [--summary-out <file>] [--do-nothing] [-v] <command> ...

    Script utilities to ship games, mostly Unreal Engine based ones.

    optional arguments:
        -h, --help            show this help message and exit

    Logging:
        -s, --summary         Outputs an error/warning summary at end of command
        --summary-out <file>  Writes the warning/error summary to a file
        --do-nothing          Just parses arguments and exits (used for CIS tests)
        -v, --verbose         Enable verbose mode

Warnings and errors are mathed in the child processes output via a set of
regular expressions that can be tweaked per-project in the nimp config file (see
the :ref:`config_warning_error_patterns` documentation for further details).

Available commands
==================

.. toctree::
   :maxdepth: 1

   commands/build.rst


Notes on output debug string
============================
On windows, nimps redirects output debug string generated by child processes to
his own standard output. This can be useful to capture ODS of some program just
by running.

::

    nimp run some.exe /arg /arg2 ...
